#!/usr/bin/env sh

########################### Alias ###########################

# vim
# export EDITOR=/Applications/MacVim.app/Contents/MacOS/Vim
# alias vi='env LANG=ja_JP.UTF-8 /Applications/MacVim.app/Contents/MacOS/Vim "$@"'
# alias vim='env LANG=ja_JP.UTF-8 /Applications/MacVim.app/Contents/MacOS/Vim "$@"'
export EDITOR=/usr/bin/vim

# Mac標準のsedは使いにくいのでGNU版を使用 'brew install gnu-sed'
alias sed='gsed'

# Mac標準のawkは使いにくいのでGNU版を使用 'brew install gawk'
alias awk='gawk'

# Mac標準のfind/xargsは使いにくいのでGNU版を使用 'brew install findutils'
alias find='gfind'
alias xargs='gxargs'

# Mac標準のdateは使いにくいのでGNU版を使用 'brew install coreutils'
alias date='gdate'
alias readlink='greadlink'

########################### Env ###########################


# Java
export JAVA_HOME=`/usr/libexec/java_home -v 1.8`
export JAVA_OPTS=-Dfile.encoding=UTF-8

# Python
#export PATH=${PATH}:/usr/local/Cellar/python/2.7.5/bin
export PYENV_ROOT="${HOME}/.pyenv"
[ -d "${PYENV_ROOT}" ] && {
    export PATH=${PYENV_ROOT}/bin:${PYENV_ROOT}/shims:${PATH}
    eval "$(pyenv init -)"
}

# Python powerline用
PYTHON_HOME_DIR=~/Library/Python/2.7
export PATH=$PYTHON_HOME_DIR/bin:$PATH


# GoLang
export GOPATH=${HOME}/.go
export PATH=$PATH:/usr/local/go/bin

# sbt options
export SBT_OPTS="-Xmx2G -XX:MaxPermSize=2G -Xss2M"

# android
# export PATH=${PATH}:$HOME/Library/Android/sdk/tools
# export PATH=${PATH}:$HOME/Library/Android/sdk/platform-tools

# デーモンの常駐
export GRADLE_OPTS="-Dorg.gradle.daemon=true \
  -Dorg.gradle.jvmargs=-Xmx512m \
  -XX:+UseParallelGC \
  -XX:ParallelGCThreads=2 \
  -XX:CICompilerCount=2"
#  --add-opens=java.base/java.lang=ALL-UNNAMED \
#  --add-opens=java.base/java.lang.invoke=ALL-UNNAMED \

########################### Function ###########################


# 隠しファイルの表示切り替え
function toggle-show-all-files() {
    IS_SHOW_ALL_FILES=`defaults read com.apple.finder AppleShowAllFiles`
    if $IS_SHOW_ALL_FILES ; then
        defaults write com.apple.finder AppleShowAllFiles FALSE && killall Finder
    else
        defaults write com.apple.finder AppleShowAllFiles TRUE && killall Finder
    fi
}
